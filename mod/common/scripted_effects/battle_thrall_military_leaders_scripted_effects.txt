# this = species
# event_target:protected_country = country, who is designating this species as protectors
set_species_honored_protector = {
	if = {
		limit = {
			has_citizenship_type = {
				type = citizenship_slavery
				country = event_target:protected_country
			}
			has_slavery_type = {
				type = slavery_military
				country = event_target:protected_country
			}
			event_target:protected_country = {
				OR = {
					AND = {
						has_origin = origin_necrophage
						has_trait = trait_necrophage
					}
					is_xenophobe = yes
				}
			}
		}
		set_species_flag = allow_military_leaders_honored_protectors@event_target:protected_country
		if = {
			limit = {
				NOT = {
					has_military_service_type = {
						type = military_service_full
						country = event_target:protected_country
					}
				}
			}
			set_military_service_type = {
				type = military_service_full
				country = event_target:protected_country
				cooldown = yes
			}
		}
	}
}

# this = species
# DISCRIMINATOR = something to give the event target a unique name
accumulate_potential_protector_if_available = {
	if = {
		limit = {
			check_variable = {
				which = num_subset_potential_protectors
				value < 10
			}
			check_variable = {
				which = num_potential_protectors
				value > 0
			}
		}
		random_galaxy_species = {
			limit = { has_species_flag = potential_protector@prev }
			remove_species_flag = potential_protector@prev
			prev = {
				change_variable = {
					which = num_subset_potential_protectors
					value = 1
				}
				change_variable = {
					which = num_potential_protectors
					value = -1
				}
			}
			save_event_target_as = potential_protectors$DISCRIMINATOR$
		}
	}
}

# logic does not change if nonbinary_leaders_installed - we're changing them to an entirely "new" leader and not converting an existing one
# this = leader
btml_leader_spawned_match_gender_to_species = {
	species = {
		switch = {
			trigger = species_gender
			indeterminable = { } # do nothing - changing to indeterminable requires cloning, and that should happen after on_leader_species_changed
			female = {
				prev = {
					if = {
						limit = { NOT = { gender = female } }
						set_is_female = yes
					}
				}
			}
			male = {
				prev = {
					if = {
						limit = { NOT = { gender = male } }
						set_is_female = no
					}
				}
			}
			not_set = {
				prev = {
					if = {
						limit = {
							NOR = {
								gender = female
								gender = male
							}
						}
						random_list = {
							50 = { set_is_female = yes }
							50 = { set_is_female = no }
						}
					}
				}
			}
		}
	}
}

# this = leader
btml_leader_spawned_clone_to_indeterminable_species = {
	clone_leader = {
		target = this
		gender = indeterminable
		effect = {
			change_leader_portrait = prev
			recruitable = no
			recruitable = yes
		}
	}
}